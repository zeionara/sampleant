<project name="Lab3" default="build" basedir=".">
  <property environment="env"/>
  <property file="build.properties"/>

  <taskdef file="${antlib.file}">
        <classpath>
            <pathelement location="${antcontrib.file}"/>
        </classpath>
  </taskdef>

  <target name="makedirs.compile" description="Create necessary directories for .class files">
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${class.dir}"/>
  </target>

  <target name="compile" depends="makedirs.compile" description="Compile our .java files">
    <javac compiler="javac1.8" srcdir="${src.dir}" destdir="${class.dir}" includeAntRuntime="false" fork="true"/>
  </target>

  <target name="build" depends="compile" description="Put compiled classes to the .jar file">
    <jar destfile="${jar.file}" basedir="${class.dir}">
      <manifest>
        <attribute name="Version" value="2.0"/>
        <attribute name="Main-Class" value="Lab3"/>
      </manifest>
    </jar>
  </target>

  <target name="makedirs.test" description="Make dirs for test">
    <mkdir dir="${testclass.dir}"/>
  </target>

  <target name="compile.test" description="Compilation of the tests" depends="build, makedirs.test">
    <javac srcdir="${test.dir}" destdir="${testclass.dir}" includeantruntime="false" fork="true" >
	    <classpath>
          <pathelement location="${junit.file}"/>
		      <pathelement path="${class.dir}"/>
      </classpath>
    </javac>
  </target>

  <target name="test" description="Run unit tests for the project" depends="compile.test">
    <junit printsummary="yes" haltonerror="yes" haltonfailure="yes" fork="yes">
      <formatter type="plain" usefile="false"/>
	      <classpath>
          <pathelement location="${junit.file}"/>
		      <pathelement location="${jar.file}"/>
		      <pathelement location="${testclass.dir}"/>
          <pathelement location="${hamcrest.file}"/>
        </classpath>
        <batchtest fork="yes" todir="${testreport.dir}">
          <fileset dir="${test.dir}">
            <include name="**/*Test.java"/>
          </fileset>
        </batchtest>
    </junit>
  </target>

  <target name="doc" description="Add docs to the jar file" depends="build">
    <unjar src="${jar.file}" dest="${unjar.dir}"/>

    <for param="file">
      <path>
          <fileset dir="${unjar.dir}">
            <exclude name="**/*.html"/>
            <exclude name="**/*.js"/>
            <exclude name="**/*.MF"/>
          </fileset>
      </path>
      <sequential>
        <local name="md5" />
        <local name="sha1" />
        <local name="relativeFile" />

        <checksum file="@{file}" algorithm="md5"  property="md5"/>
        <checksum file="@{file}" algorithm="SHA-1"  property="sha1"/>
        <property name="relativeFile" location="@{file}" basedir="${unjar.dir}" relative="true" />

        <manifest file="${unjaredmf.file}" mode="update">
          <section name="${relativeFile}">
            <attribute name="MD5" value="${md5}"/>
            <attribute name="SHA-1" value="${sha1}"/>
          </section>
        </manifest>
      </sequential>
    </for>

    <javadoc destdir="${unjar.dir}/doc">
        <fileset dir="${src.dir}" defaultexcludes="yes">
          <include name="**/*.java"/>
        </fileset>
	  </javadoc>

    <jar destfile="${jar.file}" manifest="${unjaredmf.file}" basedir="${unjar.dir}"/>
  </target>

  <target name="env.compile" description="Compile project in some invironment" depends="makedirs.compile">
    <javac destdir="${class.dir}" compiler="${compiler}" fork="true">
      <src path="${src.dir}"/>
    </javac>
  </target>

  <target name="env" depends="env.compile">
    <java classpath="${class.dir}" classname="Lab3" fork="true" jvm="${jvm}">
      <arg value="${radius}"/>
      <jvmarg value="${driver}"/>
      <jvmarg value="${maxpermsize}"/>
      <jvmarg value="${xms}"/>
    </java>
  </target>

  <target name="clean" description="Delete all compiled files and temporary files">
    <delete dir="${class.dir}"/>
    <delete dir="${temp.dir}"/>
  </target>
</project>
